name: Docker

on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '0 0 * * *'

env:
  REGISTRY: ghcr.io

jobs:
  setup-dockerfile-matrix:
    runs-on: ubuntu-latest

    steps:
      - name: Find image names in apps directory
        id: find-images
        run: |-
          echo "::set-output name=image-matrix::$(find apps -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | jq -R -s 'split("\n")[:-1]')"
      - name: Find Dockerfiles in apps directory
        id: find-dockerfiles
        run: |-
          echo "::set-output name=dockerfile-matrix::$(find apps -type f -name 'Dockerfile' -exec printf '"%s", ' {} + | sed 's/, $//; s/.*/[&]/')"
    outputs:
      image-matrix: ${{ steps.find-image-names.outputs.image-matrix }}
      dockerfile-matrix: ${{ steps.find-dockerfiles.outputs.dockerfile-matrix }}

  # build-images:
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #     # This is used to complete the identity challenge
  #     # with sigstore/fulcio when running outside of PRs.
  #     id-token: write
  #
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #
  #     # Install the cosign tool except on PR
  #     # https://github.com/sigstore/cosign-installer
  #     - name: Install cosign
  #       if: github.event_name != 'pull_request'
  #       uses: sigstore/cosign-installer@v3.1.1
  #       with:
  #         cosign-release: 'v2.1.1'
  #
  #     # Set up BuildKit Docker container builder to be able to build
  #     # multi-platform images and export cache
  #     # https://github.com/docker/setup-buildx-action
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
  #
  #     # Login against a Docker registry
  #     # https://github.com/docker/login-action
  #     - name: Log into registry ${{ env.REGISTRY }}
  #       uses: docker/login-action@v3
  #       with:
  #         registry: ${{ env.REGISTRY }}
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #
  #     # Extract metadata (tags, labels) for Docker
  #     # https://github.com/docker/metadata-action
  #     - name: Extract Docker metadata
  #       id: meta
  #       uses: docker/metadata-action@v5
  #         images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
  #
  #     # Build and push Docker image with Buildx
  #     # https://github.com/docker/build-push-action
  #     - name: Build and push Docker image
  #       id: build-and-push
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #
  #     # Sign the resulting Docker image digest except on PRs.
  #     # This will only write to the public Rekor transparency log when the Docker
  #     # repository is public to avoid leaking data.  If you would like to publish
  #     # transparency data even for private images, pass --force to cosign below.
  #     # https://github.com/sigstore/cosign
  #     - name: Sign the published Docker image
  #       if: ${{ github.event_name != 'pull_request' }}
  #       env:
  #         # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
  #         TAGS: ${{ steps.meta.outputs.tags }}
  #         DIGEST: ${{ steps.build-and-push.outputs.digest }}
  #       # This step uses the identity token to provision an ephemeral certificate
  #       # against the sigstore community Fulcio instance.
  #       run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
